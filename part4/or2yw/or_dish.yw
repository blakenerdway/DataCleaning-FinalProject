#@begin Linear_OR #@desc Linear OpenRefine Workflow
#@param expression:grel:if(value.toNumber()_<_2,_cells['last_appeared'].value,_value)
#@param col-name:id
#@param expression:grel:if_(value.toNumber()_>_cells['last_appeared'].value.toNumber(),_cells['last_appeared'].value.toNumber(),_value)
#@param col-name:lowest_price
#@param col-name:description
#@param col-name:name
#@param col-name:last_appeared
#@param expression:grel:row.index_+_1
#@param col-name:menus_appeared
#@param expression:grel:if_(value.slice(0,1).toNumber()_>_1,_(1+value.slice(1,4)).toNumber(),__value.toNumber())
#@param expression:value.trim()
#@param col-name:highest_price
#@param col-name:times_appeared
#@param col-name:first_appeared
#@param expression:value.toNumber()
#@param expression:value.replace(/\\s+/,'_')
#@param expression:grel:0
#@param expression:grel:if_(value.slice(0,1).toNumber()_>_1,_(1+value.slice(1,4)).toNumber(),_value.toNumber())
#@param expression:value.toTitlecase()
#@param expression:grel:if_(value.toNumber()_>_cells['highest_price'].value.toNumber(),_cells['highest_price'].value.toNumber(),_value)
#@in table0
#@out table19
#@begin core/text-transform0#@desc Text transform on cells in column name using expression value.toTitlecase()
#@param col-name:name
#@param expression:value.toTitlecase()
#@in table0
#@out table1
#@end core/text-transform0
#@begin core/column-removal0#@desc Remove column description
#@param col-name:description
#@in table1
#@out table2
#@end core/column-removal0
#@begin core/text-transform1#@desc Text transform on cells in column name using expression value.trim()
#@param col-name:name
#@param expression:value.trim()
#@in table2
#@out table3
#@end core/text-transform1
#@begin core/text-transform2#@desc Text transform on cells in column name using expression value.replace(/\\s+/,' ')
#@param col-name:name
#@param expression:value.replace(/\\s+/,'_')
#@in table3
#@out table4
#@end core/text-transform2
#@begin core/text-transform3#@desc Text transform on cells in column id using expression value.toNumber()
#@param col-name:id
#@param expression:value.toNumber()
#@in table4
#@out table5
#@end core/text-transform3
#@begin core/text-transform4#@desc Text transform on cells in column first_appeared using expression value.toNumber()
#@param col-name:first_appeared
#@param expression:value.toNumber()
#@in table5
#@out table6
#@end core/text-transform4
#@begin core/text-transform5#@desc Text transform on cells in column menus_appeared using expression value.toNumber()
#@param col-name:menus_appeared
#@param expression:value.toNumber()
#@in table6
#@out table7
#@end core/text-transform5
#@begin core/text-transform6#@desc Text transform on cells in column times_appeared using expression value.toNumber()
#@param col-name:times_appeared
#@param expression:value.toNumber()
#@in table7
#@out table8
#@end core/text-transform6
#@begin core/text-transform7#@desc Text transform on cells in column id using expression grel:row.index + 1
#@param col-name:id
#@param expression:grel:row.index_+_1
#@in table8
#@out table9
#@end core/text-transform7
#@begin core/text-transform8#@desc Text transform on cells in column last_appeared using expression value.toNumber()
#@param col-name:last_appeared
#@param expression:value.toNumber()
#@in table9
#@out table10
#@end core/text-transform8
#@begin core/text-transform9#@desc Text transform on cells in column lowest_price using expression value.toNumber()
#@param col-name:lowest_price
#@param expression:value.toNumber()
#@in table10
#@out table11
#@end core/text-transform9
#@begin core/text-transform10#@desc Text transform on cells in column highest_price using expression value.toNumber()
#@param col-name:highest_price
#@param expression:value.toNumber()
#@in table11
#@out table12
#@end core/text-transform10
#@begin core/text-transform11#@desc Text transform on cells in column last_appeared using expression grel:if (value.slice(0,1).toNumber() > 1, (1+value.slice(1,4)).toNumber(),  value.toNumber())
#@param col-name:last_appeared
#@param expression:grel:if_(value.slice(0,1).toNumber()_>_1,_(1+value.slice(1,4)).toNumber(),__value.toNumber())
#@in table12
#@out table13
#@end core/text-transform11
#@begin core/text-transform12#@desc Text transform on cells in column first_appeared using expression grel:if(value.toNumber() < 2, cells['last_appeared'].value, value)
#@param col-name:first_appeared
#@param expression:grel:if(value.toNumber()_<_2,_cells['last_appeared'].value,_value)
#@in table13
#@out table14
#@end core/text-transform12
#@begin core/text-transform13#@desc Text transform on cells in column lowest_price using expression grel:0
#@param col-name:lowest_price
#@param expression:grel:0
#@in table14
#@out table15
#@end core/text-transform13
#@begin core/text-transform14#@desc Text transform on cells in column highest_price using expression grel:0
#@param col-name:highest_price
#@param expression:grel:0
#@in table15
#@out table16
#@end core/text-transform14
#@begin core/text-transform15#@desc Text transform on cells in column first_appeared using expression grel:if (value.slice(0,1).toNumber() > 1, (1+value.slice(1,4)).toNumber(), value.toNumber())
#@param col-name:first_appeared
#@param expression:grel:if_(value.slice(0,1).toNumber()_>_1,_(1+value.slice(1,4)).toNumber(),_value.toNumber())
#@in table16
#@out table17
#@end core/text-transform15
#@begin core/text-transform16#@desc Text transform on cells in column first_appeared using expression grel:if (value.toNumber() > cells['last_appeared'].value.toNumber(), cells['last_appeared'].value.toNumber(), value)
#@param col-name:first_appeared
#@param expression:grel:if_(value.toNumber()_>_cells['last_appeared'].value.toNumber(),_cells['last_appeared'].value.toNumber(),_value)
#@in table17
#@out table18
#@end core/text-transform16
#@begin core/text-transform17#@desc Text transform on cells in column lowest_price using expression grel:if (value.toNumber() > cells['highest_price'].value.toNumber(), cells['highest_price'].value.toNumber(), value)
#@param col-name:lowest_price
#@param expression:grel:if_(value.toNumber()_>_cells['highest_price'].value.toNumber(),_cells['highest_price'].value.toNumber(),_value)
#@in table18
#@out table19
#@end core/text-transform17
#@end Linear_OR
