
/* Start of top-level graph */
digraph Workflow {
rankdir=TB

/* Title for graph */
fontname=Helvetica; fontsize=18; labelloc=t
label=Linear_OR

/* Start of double cluster for drawing box around nodes in workflow */
subgraph cluster_workflow_box_outer { label=""; color=black; penwidth=2
subgraph cluster_workflow_box_inner { label=""; penwidth=0

/* Style for nodes representing atomic programs in workflow */
node[shape=box style=filled fillcolor="#CCFFCC" peripheries=1 fontname=Helvetica]

/* Nodes representing atomic programs in workflow */
"core/text-transform0#" [shape=record rankdir=LR label="{<f0> core/text-transform0# |<f1> Text transform on cells in column name using expression value.toTitlecase()}"];
"core/column-removal0#" [shape=record rankdir=LR label="{<f0> core/column-removal0# |<f1> Remove column description}"];
"core/text-transform1#" [shape=record rankdir=LR label="{<f0> core/text-transform1# |<f1> Text transform on cells in column name using expression value.trim()}"];
"core/text-transform2#" [shape=record rankdir=LR label="{<f0> core/text-transform2# |<f1> Text transform on cells in column name using expression value.replace(/\\s+/,' ')}"];
"core/text-transform3#" [shape=record rankdir=LR label="{<f0> core/text-transform3# |<f1> Text transform on cells in column id using expression value.toNumber()}"];
"core/text-transform4#" [shape=record rankdir=LR label="{<f0> core/text-transform4# |<f1> Text transform on cells in column first_appeared using expression value.toNumber()}"];
"core/text-transform5#" [shape=record rankdir=LR label="{<f0> core/text-transform5# |<f1> Text transform on cells in column menus_appeared using expression value.toNumber()}"];
"core/text-transform6#" [shape=record rankdir=LR label="{<f0> core/text-transform6# |<f1> Text transform on cells in column times_appeared using expression value.toNumber()}"];
"core/text-transform7#" [shape=record rankdir=LR label="{<f0> core/text-transform7# |<f1> Text transform on cells in column id using expression grel\:row.index + 1}"];
"core/text-transform8#" [shape=record rankdir=LR label="{<f0> core/text-transform8# |<f1> Text transform on cells in column last_appeared using expression value.toNumber()}"];
"core/text-transform9#" [shape=record rankdir=LR label="{<f0> core/text-transform9# |<f1> Text transform on cells in column lowest_price using expression value.toNumber()}"];
"core/text-transform10#" [shape=record rankdir=LR label="{<f0> core/text-transform10# |<f1> Text transform on cells in column highest_price using expression value.toNumber()}"];
"core/text-transform11#" [shape=record rankdir=LR label="{<f0> core/text-transform11# |<f1> Text transform on cells in column last_appeared using expression grel\:if (value.slice(0,1).toNumber() > 1, (1+value.slice(1,4)).toNumber(), value.toNumber())}"];
"core/text-transform12#" [shape=record rankdir=LR label="{<f0> core/text-transform12# |<f1> Text transform on cells in column first_appeared using expression grel\:if(value.toNumber() < 2, cells['last_appeared'].value, value)}"];
"core/text-transform13#" [shape=record rankdir=LR label="{<f0> core/text-transform13# |<f1> Text transform on cells in column lowest_price using expression grel\:0}"];
"core/text-transform14#" [shape=record rankdir=LR label="{<f0> core/text-transform14# |<f1> Text transform on cells in column highest_price using expression grel\:0}"];
"core/text-transform15#" [shape=record rankdir=LR label="{<f0> core/text-transform15# |<f1> Text transform on cells in column first_appeared using expression grel\:if (value.slice(0,1).toNumber() > 1, (1+value.slice(1,4)).toNumber(), value.toNumber())}"];
"core/text-transform16#" [shape=record rankdir=LR label="{<f0> core/text-transform16# |<f1> Text transform on cells in column first_appeared using expression grel\:if (value.toNumber() > cells['last_appeared'].value.toNumber(), cells['last_appeared'].value.toNumber(), value)}"];
"core/text-transform17#" [shape=record rankdir=LR label="{<f0> core/text-transform17# |<f1> Text transform on cells in column lowest_price using expression grel\:if (value.toNumber() > cells['highest_price'].value.toNumber(), cells['highest_price'].value.toNumber(), value)}"];

/* Style for nodes representing non-parameter data channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FFFFCC" peripheries=1 fontname=Helvetica]

/* Nodes for non-parameter data channels in workflow */
table19
table0
table1
table2
table3
table4
table5
table6
table7
table8
table9
table10
table11
table12
table13
table14
table15
table16
table17
table18

/* Style for nodes representing parameter channels in workflow */
node[shape=box style="rounded,filled" fillcolor="#FCFCFC" peripheries=1 fontname=Helvetica]

/* Nodes representing parameter channels in workflow */
"col-name:name"
"expression:value.toTitlecase()"
"col-name:description"
"expression:value.trim()"
"expression:value.replace(/\\s+/,'_')"
"col-name:id"
"expression:value.toNumber()"
"col-name:first_appeared"
"col-name:menus_appeared"
"col-name:times_appeared"
"expression:grel:row.index_+_1"
"col-name:last_appeared"
"col-name:lowest_price"
"col-name:highest_price"
"expression:grel:if_(value.slice(0,1).toNumber()_>_1,_(1+value.slice(1,4)).toNumber(),__value.toNumber())"
"expression:grel:if(value.toNumber()_<_2,_cells['last_appeared'].value,_value)"
"expression:grel:0"
"expression:grel:if_(value.slice(0,1).toNumber()_>_1,_(1+value.slice(1,4)).toNumber(),_value.toNumber())"
"expression:grel:if_(value.toNumber()_>_cells['last_appeared'].value.toNumber(),_cells['last_appeared'].value.toNumber(),_value)"
"expression:grel:if_(value.toNumber()_>_cells['highest_price'].value.toNumber(),_cells['highest_price'].value.toNumber(),_value)"

/* Edges representing connections between programs and channels */
"core/text-transform0#" -> table1
"col-name:name" -> "core/text-transform0#"
"expression:value.toTitlecase()" -> "core/text-transform0#"
table0 -> "core/text-transform0#"
"core/column-removal0#" -> table2
"col-name:description" -> "core/column-removal0#"
table1 -> "core/column-removal0#"
"core/text-transform1#" -> table3
"col-name:name" -> "core/text-transform1#"
"expression:value.trim()" -> "core/text-transform1#"
table2 -> "core/text-transform1#"
"core/text-transform2#" -> table4
"col-name:name" -> "core/text-transform2#"
"expression:value.replace(/\\s+/,'_')" -> "core/text-transform2#"
table3 -> "core/text-transform2#"
"core/text-transform3#" -> table5
"col-name:id" -> "core/text-transform3#"
"expression:value.toNumber()" -> "core/text-transform3#"
table4 -> "core/text-transform3#"
"core/text-transform4#" -> table6
"col-name:first_appeared" -> "core/text-transform4#"
"expression:value.toNumber()" -> "core/text-transform4#"
table5 -> "core/text-transform4#"
"core/text-transform5#" -> table7
"col-name:menus_appeared" -> "core/text-transform5#"
"expression:value.toNumber()" -> "core/text-transform5#"
table6 -> "core/text-transform5#"
"core/text-transform6#" -> table8
"col-name:times_appeared" -> "core/text-transform6#"
"expression:value.toNumber()" -> "core/text-transform6#"
table7 -> "core/text-transform6#"
"core/text-transform7#" -> table9
"col-name:id" -> "core/text-transform7#"
"expression:grel:row.index_+_1" -> "core/text-transform7#"
table8 -> "core/text-transform7#"
"core/text-transform8#" -> table10
"col-name:last_appeared" -> "core/text-transform8#"
"expression:value.toNumber()" -> "core/text-transform8#"
table9 -> "core/text-transform8#"
"core/text-transform9#" -> table11
"col-name:lowest_price" -> "core/text-transform9#"
"expression:value.toNumber()" -> "core/text-transform9#"
table10 -> "core/text-transform9#"
"core/text-transform10#" -> table12
"col-name:highest_price" -> "core/text-transform10#"
"expression:value.toNumber()" -> "core/text-transform10#"
table11 -> "core/text-transform10#"
"core/text-transform11#" -> table13
"col-name:last_appeared" -> "core/text-transform11#"
"expression:grel:if_(value.slice(0,1).toNumber()_>_1,_(1+value.slice(1,4)).toNumber(),__value.toNumber())" -> "core/text-transform11#"
table12 -> "core/text-transform11#"
"core/text-transform12#" -> table14
"col-name:first_appeared" -> "core/text-transform12#"
"expression:grel:if(value.toNumber()_<_2,_cells['last_appeared'].value,_value)" -> "core/text-transform12#"
table13 -> "core/text-transform12#"
"core/text-transform13#" -> table15
"col-name:lowest_price" -> "core/text-transform13#"
"expression:grel:0" -> "core/text-transform13#"
table14 -> "core/text-transform13#"
"core/text-transform14#" -> table16
"col-name:highest_price" -> "core/text-transform14#"
"expression:grel:0" -> "core/text-transform14#"
table15 -> "core/text-transform14#"
"core/text-transform15#" -> table17
"col-name:first_appeared" -> "core/text-transform15#"
"expression:grel:if_(value.slice(0,1).toNumber()_>_1,_(1+value.slice(1,4)).toNumber(),_value.toNumber())" -> "core/text-transform15#"
table16 -> "core/text-transform15#"
"core/text-transform16#" -> table18
"col-name:first_appeared" -> "core/text-transform16#"
"expression:grel:if_(value.toNumber()_>_cells['last_appeared'].value.toNumber(),_cells['last_appeared'].value.toNumber(),_value)" -> "core/text-transform16#"
table17 -> "core/text-transform16#"
"core/text-transform17#" -> table19
"col-name:lowest_price" -> "core/text-transform17#"
"expression:grel:if_(value.toNumber()_>_cells['highest_price'].value.toNumber(),_cells['highest_price'].value.toNumber(),_value)" -> "core/text-transform17#"
table18 -> "core/text-transform17#"

/* End of double cluster for drawing box around nodes in workflow */
}}

/* End of top-level graph */
}
